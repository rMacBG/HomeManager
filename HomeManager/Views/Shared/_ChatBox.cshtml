@using System.Security.Claims
@model HomeManager.Data.Data.ViewModels.HomeDetailsViewModel
<style>
    #chatContainer {
        display: none;
        border: 1px solid #ccc;
        padding: 1rem;
        background: #f9f9f9;
        min-height: 200px;
        width: 300px;
    }
    .chat-popup {
        display: none;
        position: fixed;
        bottom: 24px;
        right: 24px;
        width: 350px;
        max-width: 95vw;
        background: #fff;
        border-radius: 16px;
        box-shadow: 0 8px 32px rgba(0,0,0,0.18);
        z-index: 1000;
        overflow: hidden;
        border: none;
    }
    .chat-header {
        position: sticky;
        top: 0;
        background: linear-gradient(90deg, #007bff 60%, #0056b3 100%);
        color: #fff;
        padding: 16px;
        font-size: 1.1em;
        font-weight: 600;
        display: flex;
        align-items: center;
        justify-content: space-between;
        border-radius: 16px 16px 0 0;
    }

    .chat-body {
        height: 260px;
        padding: 12px;
        background: #f6f8fa;
        overflow-y: auto;
    }

    .chat-footer {
        position: relative;
        background: #f6f8fa;
        padding: 12px;
        display: flex;
        gap: 8px;
        border-top: 1px solid #eaeaea;
    }

        .chat-footer input {
            flex: 1;
            border-radius: 8px;
            border: 1px solid #ccc;
            padding: 8px;
            font-size: 1em;
        }

        .chat-footer button {
            border-radius: 8px;
            background: #007bff;
            color: #fff;
            border: none;
            padding: 8px 16px;
            font-weight: 600;
            transition: background 0.2s;
        }

        .chat-footer button:hover {
            background: #0056b3;
        }

    .close-btn {
        background: none;
        border: none;
        color: #fff;
        font-size: 1.5em;
        cursor: pointer;
    }

    .fixed-image {
        width: 100%;
        height: 200px;
        object-fit: cover;
        border: 2px solid #ddd;
        border-radius: 8px;
        padding: 5px;
    }

    .message {
        display: flex;
        align-items: flex-end;
        margin-bottom: 10px;
    }

        .message.self {
            justify-content: flex-end;
        }


        .message.other {
            justify-content: flex-start;
        }


    .message-bubble {
        max-width: 75%;
        padding: 10px 14px;
        border-radius: 12px;
        background: #e3f2fd;
        color: #222;
        position: relative;
        font-size: 0.98em;
        box-shadow: 0 2px 8px rgba(0,0,0,0.04);
    }


    .message.self .message-bubble {

        background: #007bff;
        color: #fff;
    }


    .message-author {
        font-weight: 500;
        margin-bottom: 2px;
        font-size: 0.95em;
    }


    .message-timestamp {
        font-size: 0.8em;
        color: #888;
        margin-left: 8px;
        margin-top: 2px;
        display: inline-block;
    }

    .message-status {
        font-size: 0.8em;
        color: #bbb;
        text-align: right;
        margin-top: 2px;
    }
</style>

<div id="chatPopup" class="chat-popup">
    <div class="chat-header">
        <span>Chat with @Model.OtherParticipantName</span>
        <button id="closeChatBtn" class="close-btn">&times;</button>
    </div>
    <div class="chat-body" id="messagesList"></div>
    <div class="chat-footer" style="position:relative;">
        <button type="button" class="btn-hm" id="menuBtn">&#8942;</button>
        <div id="chatMenu" style="display:none;position:absolute;bottom:56px;right:0;background:#fff;border-radius:12px;box-shadow:0 2px 8px #a21caf22;padding:12px;z-index:1100;">
            <button type="button" class="btn-hm" id="emojiBtn">&#128515; Emoji</button>
            <emoji-picker id="emojiPicker" style="display:none;"></emoji-picker>
            <input type="file" id="fileInput" class="form-control" style="max-width:120px;" accept="image/*" />
        </div>
        <input type="text" id="messageInput" placeholder="Type a message..." autocomplete="off" />
        <input type="hidden" id="senderId" value='@User.FindFirst(ClaimTypes.NameIdentifier)?.Value' />
        @if (Model.Conversation != null)
        {
            <input type="hidden" id="conversationId" value="@Model.Conversation.Id" />
        }
        <button class="btn-hm" onclick="sendMessage()">Send</button>
    </div>
</div>
<div id="typingIndicator" style="font-size:0.9em;color:#a21caf;margin:4px 0 0 8px;display:none;">Dealer is typing...</div>


